Index: src/org/eclipse/emf/henshin/provider/util/HenshinColorMode.java
===================================================================
--- src/org/eclipse/emf/henshin/provider/util/HenshinColorMode.java	(revision 1928)
+++ src/org/eclipse/emf/henshin/provider/util/HenshinColorMode.java	(working copy)
@@ -9,15 +9,16 @@
  */
 package org.eclipse.emf.henshin.provider.util;
 
-import java.io.File;
-import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.MalformedURLException;
 import java.net.URL;
+import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Properties;
 
-import org.eclipse.core.runtime.FileLocator;
 import org.eclipse.core.runtime.Platform;
 import org.eclipse.emf.common.util.URI;
 import org.eclipse.emf.henshin.model.Action;
@@ -33,6 +34,8 @@
  */
 public class HenshinColorMode {
 	
+	public static final String PLUGIN_ID = "org.eclipse.emf.henshin.edit";
+	
 	public static class Color {
 		
 		public final int red, green, blue;
@@ -79,23 +82,31 @@
 				return super.put(String.valueOf(v).toLowerCase(), mode);
 			}
 		};
-		Bundle bundle = Platform.getBundle("org.eclipse.emf.henshin.edit");
-		URL colorModesURL = bundle.getEntry("colorModes");
-		try {
-		    File dir = new File(FileLocator.resolve(colorModesURL).toURI());
-		    for (File file : dir.listFiles()) {
-		    	if (file.getAbsolutePath().endsWith(".properties")) {
-		    		Properties properties = new Properties();
-		    		properties.load(new FileInputStream(file));
-		    		HenshinColorMode mode = new HenshinColorMode(properties);
-		    		REGISTRY.put(mode.getName(), mode);
-		    	}
-		    }
-		} catch (Throwable t) {
-			t.printStackTrace();
+
+		Bundle bundle = Platform.getBundle(PLUGIN_ID);
+		Enumeration<URL> colorModesURLs = bundle.findEntries("/colorModes", "*.properties", true);
+		
+		while (colorModesURLs.hasMoreElements()) {
+			URL url = colorModesURLs.nextElement();
+			loadColorMode(url.getFile());
 		}		
 	}
 	
+	private static void loadColorMode(String filePath) {
+		try {
+			URL url = new URL("platform:/plugin/" + PLUGIN_ID + filePath);
+			InputStream inputStream = url.openConnection().getInputStream();
+			Properties properties = new Properties();
+			properties.load(inputStream);
+			HenshinColorMode mode = new HenshinColorMode(properties);
+    		REGISTRY.put(mode.getName(), mode);
+		} catch (MalformedURLException e) {
+			e.printStackTrace();
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+	}
+	
 	public static final String BG_RULE = "BG_RULE"; 
 	public static final String BG_UNIT = "BG_UNIT";
 	public static final String BG_INVOCATION = "BG_INVOCATION";
