<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="slice" nsURI="http://www.example.org/RuleBasedSlice" nsPrefix="RuleBasedSlice">
  <eClassifiers xsi:type="ecore:EClass" name="ExecutableModelSlice" eSuperTypes="../../org.sidiff.slicer.slice/model/Slice.ecore#//ModelSlice">
    <eOperations name="serialize" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="String absolute_path = path; String modelslice_name = &quot;ExecutableSlice.slice&quot;; String symmetricdiff_name = &quot;ExecutableSlice.&quot; + AsymmetricDiffFacade.SYMMETRIC_DIFF_EXT; String asymmetricdiff_name = &quot;ExecutableSlice.&quot; + AsymmetricDiffFacade.ASYMMETRIC_DIFF_EXT; String foldername = &quot;RuleBasedSlice&quot;; String separator = File.separator; for (SlicedElement slicedElement : this.getSlicedElements()) { slicedElement.setObject(null); } if (!absolute_path.endsWith(separator)) { absolute_path += separator; } absolute_path += foldername; SymmetricDifference symmetricDifference = this.getAsymmetricDifference().getSymmetricDifference(); symmetricDifference.getMatching().setUriA(modelslice_name); symmetricDifference.getMatching().setUriB(modelslice_name); symmetricDifference.setUriModelA(modelslice_name); symmetricDifference.setUriModelB(modelslice_name); AsymmetricDifference asymmetricDifference = this.getAsymmetricDifference(); asymmetricDifference.setUriOriginModel(modelslice_name); asymmetricDifference.setUriChangedModel(modelslice_name); ResourceSet resourceSet = new ResourceSetImpl(); String resSymDiffSavePath = absolute_path + separator + symmetricdiff_name; resourceSet.createResource(EMFStorage.pathToUri(resSymDiffSavePath)).getContents().add(symmetricDifference); String resAsymDiffSavePath = absolute_path + separator + asymmetricdiff_name; resourceSet.createResource(EMFStorage.pathToUri(resAsymDiffSavePath)).getContents().add(asymmetricDifference); String resModelSliceSavePath = absolute_path + separator + modelslice_name; resourceSet.createResource(EMFStorage.pathToUri(resModelSliceSavePath)).getContents().add(this); for (Resource resource : resourceSet.getResources()) { try { resource.save(null); } catch (IOException e) { e.printStackTrace(); } } if (zip) { ZipUtil.zip(absolute_path, absolute_path, AsymmetricDiffFacade.PATCH_EXTENSION); FileOperations.removeFolder(absolute_path); }  return zip? absolute_path + &quot;.&quot; + AsymmetricDiffFacade.PATCH_EXTENSION: absolute_path;"/>
      </eAnnotations>
      <eParameters name="path" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eParameters name="zip" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="asymmetricDifference" lowerBound="1"
        eType="ecore:EClass ../../org.sidiff.difference.asymmetric/model/Asymmetric.ecore#//AsymmetricDifference"/>
  </eClassifiers>
</ecore:EPackage>
