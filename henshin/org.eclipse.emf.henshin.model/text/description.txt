Model Henshin

This model description is not a real EMF artifact. It was generated by the
org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
code generator can be extended.
This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.

Package henshin <http://www.eclipse.org/emf/2011/Henshin>

  Class ModelElement
    Reference annotations : Annotation<<0..*>>

  Class Annotation -> ModelElement
    Attribute key : EString<<1..1>>
    Attribute value : EString

  Class NamedElement -> ModelElement
    Attribute name : EString
    Attribute description : EString

  Class GraphElement
    Attribute action : Action
    Operation getGraph() : Graph

  Class Module -> NamedElement
    Reference subModules : Module<<0..*>>
    Reference superModule : Module
    Reference imports : EPackage<<0..*>>
    Reference units : Unit<<0..*>>
    Reference instances : Graph<<0..*>>
    Operation getUnit(EString) : Unit
    Operation getSubModule(EString) : Module

  Class Unit -> NamedElement
    Reference parameters : Parameter<<0..*>>
    Reference parameterMappings : ParameterMapping<<0..*>>
    Attribute activated : EBoolean
    Operation getModule() : Module
    Operation getSubUnits(EBoolean) : Unit<<0..*>>
    Operation getParameter(EString) : Parameter

  Class Rule -> Unit
    Reference lhs : Graph<<1..1>>
    Reference rhs : Graph<<1..1>>
    Reference attributeConditions : AttributeCondition<<0..*>>
    Reference mappings : Mapping<<0..*>>
    Attribute checkDangling : EBoolean
    Attribute injectiveMatching : EBoolean
    Reference multiRules : Rule<<0..*>>
    Reference multiMappings : Mapping<<0..*>>
    Attribute javaImports : EString<<0..*>>
    Reference splits : Split<<0..*>>
    Reference joins : Join<<0..*>>
    Operation getKernelRule() : Rule
    Operation getRootRule() : Rule
    Operation getMultiRule(EString) : Rule
    Operation getMultiRulePath(Rule) : Rule<<0..*>>
    Operation getAllMultiRules() : Rule<<0..*>>
    Operation getAllMappings() : Mapping<<0..*>>
    Operation getActionNodes(Action) : Node<<0..*>>
    Operation getActionEdges(Action) : Edge<<0..*>>
    Operation getParameterNodes() : Node<<0..*>>
    Operation isMultiRule() : EBoolean
    Operation createNode(EClass) : Node
    Operation createEdge(Node, Node, EReference) : Edge
    Operation canCreateEdge(Node, Node, EReference) : EBoolean
    Operation removeEdge(Edge, EBoolean) : EBoolean
    Operation removeNode(Node, EBoolean) : EBoolean
    Operation removeAttribute(Attribute, EBoolean) : EBoolean

  Class Parameter -> NamedElement
    Reference unit : Unit
    Reference type : EClassifier

  Class ParameterMapping -> ModelElement
    Reference source : Parameter<<1..1>>
    Reference target : Parameter<<1..1>>

  Class Graph -> NamedElement
    Reference nodes : Node<<0..*>>
    Reference edges : Edge<<0..*>>
    Reference formula : Formula
    Operation getRule() : Rule
    Operation getNode(EString) : Node
    Operation getNodes(EClass<<1..1>>) : Node<<0..*>>
    Operation getEdges(EReference<<1..1>>) : Edge<<0..*>>
    Operation getNestedConditions() : NestedCondition<<0..*>>
    Operation getPAC(EString) : NestedCondition
    Operation getNAC(EString) : NestedCondition
    Operation getPACs() : NestedCondition<<0..*>>
    Operation getNACs() : NestedCondition<<0..*>>
    Operation isLhs() : EBoolean
    Operation isRhs() : EBoolean
    Operation isNestedCondition() : EBoolean
    Operation createPAC(EString) : NestedCondition
    Operation createNAC(EString) : NestedCondition
    Operation removeNode(Node) : EBoolean
    Operation removeEdge(Edge<<1..1>>) : EBoolean
    Operation removeNestedCondition(NestedCondition) : EBoolean

  Class Node -> NamedElement, GraphElement
    Reference type : EClass
    Reference attributes : Attribute<<0..*>>
    Reference graph : Graph
    Reference incoming : Edge<<0..*>>
    Reference outgoing : Edge<<0..*>>
    Reference tgtOfSplit : Split<<1..1>>
    Reference srcOfSplit : Split<<1..1>>
    Reference srcForJoin : Join<<1..1>>
    Reference tgtForJoin : Join<<1..1>>
    Operation getAllEdges() : Edge<<0..*>>
    Operation getOutgoing(EReference<<1..1>>) : Edge<<0..*>>
    Operation getIncoming(EReference<<1..1>>) : Edge<<0..*>>
    Operation getOutgoing(EReference<<1..1>>, Node<<1..1>>) : Edge
    Operation getIncoming(EReference<<1..1>>, Node<<1..1>>) : Edge
    Operation getAttribute(EAttribute) : Attribute
    Operation getActionAttributes(Action) : Attribute<<0..*>>
    Operation getActionNode() : Node

  Class Edge -> ModelElement, GraphElement
    Reference source : Node<<1..1>>
    Reference target : Node<<1..1>>
    Reference type : EReference
    Reference graph : Graph
    Attribute index : EString
    Attribute /indexConstant : EIntegerObject
    Operation getActionEdge() : Edge

  Class Attribute -> ModelElement, GraphElement
    Reference type : EAttribute
    Attribute value : EString
    Reference node : Node
    Attribute /constant : EJavaObject
    Attribute /null : EBoolean
    Operation getActionAttribute() : Attribute

  Class AttributeCondition -> NamedElement
    Reference rule : Rule<<1..1>>
    Attribute conditionText : EString

  Class Mapping -> ModelElement
    Reference origin : Node<<1..1>>
    Reference image : Node<<1..1>>

  Class UnaryUnit -> Unit
    Reference subUnit : Unit<<1..1>>

  Class MultiUnit -> Unit
    Reference subUnits : Unit<<0..*>>

  Class IndependentUnit -> MultiUnit

  Class SequentialUnit -> MultiUnit
    Attribute strict : EBoolean
    Attribute rollback : EBoolean

  Class ConditionalUnit -> Unit
    Reference if : Unit<<1..1>>
    Reference then : Unit<<1..1>>
    Reference else : Unit

  Class PriorityUnit -> MultiUnit

  Class IteratedUnit -> UnaryUnit
    Attribute iterations : EString

  Class LoopUnit -> UnaryUnit

  Class Formula
    Operation isTrue() : EBoolean
    Operation isFalse() : EBoolean

  Class NestedCondition -> ModelElement, Formula
    Reference conclusion : Graph
    Reference mappings : Mapping<<0..*>>
    Operation getHost() : Graph
    Operation isPAC() : EBoolean
    Operation isNAC() : EBoolean

  Class UnaryFormula -> ModelElement, Formula
    Reference child : Formula<<1..1>>

  Class BinaryFormula -> ModelElement, Formula
    Reference left : Formula<<1..1>>
    Reference right : Formula<<1..1>>

  Class And -> BinaryFormula

  Class Or -> BinaryFormula

  Class Xor -> BinaryFormula

  Class Not -> UnaryFormula

  Class Split
    Reference rule : Rule<<1..1>>
    Reference splitFrom : Node<<1..*>>
    Reference splitInto : Node<<2..*>>

  Class Join
    Reference rule : Rule<<1..1>>
    Reference joinFrom : Node<<2..*>>
    Reference joinInto : Node<<1..*>>

  DataType Action <org.eclipse.emf.henshin.model.Action>
