/**
 *
 * $Id$
 */
package org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.validation;

import org.eclipse.emf.common.util.EList;

import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.Behavior;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.ConnectionPointReference;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.Constraint;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.Pseudostate;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.Region;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.State;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.StateMachine;
import org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.Trigger;

/**
 * A sample validator interface for {@link org.sidiff.magicdraw.statecharts.effective.model.MagicDrawStatechartsEffective.State}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface StateValidator {
	boolean validate();

	boolean validateConnection(EList<ConnectionPointReference> value);
	boolean validateConnectionPoint(EList<Pseudostate> value);
	boolean validateDeferrableTrigger(EList<Trigger> value);
	boolean validateDoActivity(Behavior value);
	boolean validateEntry(Behavior value);
	boolean validateExit(Behavior value);
	boolean validateIsComposite(boolean value);
	boolean validateIsOrthogonal(boolean value);
	boolean validateIsSimple(boolean value);
	boolean validateIsSubmachineState(boolean value);
	boolean validateRedefinedState(State value);
	boolean validateStateInvariant(Constraint value);
	boolean validateSubmachine(StateMachine value);
	boolean validateRegion(EList<Region> value);
}
