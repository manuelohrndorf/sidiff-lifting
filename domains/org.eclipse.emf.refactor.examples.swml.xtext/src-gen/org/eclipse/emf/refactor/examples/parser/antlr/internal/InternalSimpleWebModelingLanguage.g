/*
 * generated by Xtext 2.9.1
 */
grammar InternalSimpleWebModelingLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.emf.refactor.examples.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.emf.refactor.examples.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.emf.refactor.examples.services.SimpleWebModelingLanguageGrammarAccess;

}

@parser::members {

 	private SimpleWebModelingLanguageGrammarAccess grammarAccess;

    public InternalSimpleWebModelingLanguageParser(TokenStream input, SimpleWebModelingLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "WebModel";
   	}

   	@Override
   	protected SimpleWebModelingLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleWebModel
entryRuleWebModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebModelRule()); }
	iv_ruleWebModel=ruleWebModel
	{ $current=$iv_ruleWebModel.current; }
	EOF;

// Rule WebModel
ruleWebModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='webmodel'
		{
			newLeafNode(otherlv_0, grammarAccess.getWebModelAccess().getWebmodelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWebModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWebModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWebModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWebModelAccess().getDataLayerDataLayerParserRuleCall_3_0());
				}
				lv_dataLayer_3_0=ruleDataLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWebModelRule());
					}
					set(
						$current,
						"dataLayer",
						lv_dataLayer_3_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.DataLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWebModelAccess().getHypertextLayerHypertextLayerParserRuleCall_4_0());
				}
				lv_hypertextLayer_4_0=ruleHypertextLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWebModelRule());
					}
					set(
						$current,
						"hypertextLayer",
						lv_hypertextLayer_4_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.HypertextLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getWebModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDataLayer
entryRuleDataLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataLayerRule()); }
	iv_ruleDataLayer=ruleDataLayer
	{ $current=$iv_ruleDataLayer.current; }
	EOF;

// Rule DataLayer
ruleDataLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='data {'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataLayerAccess().getDataKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataLayerAccess().getDataLayerAction_1(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataLayerAccess().getEntitiesEntityParserRuleCall_2_0());
				}
				lv_entities_2_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataLayerRule());
					}
					add(
						$current,
						"entities",
						lv_entities_2_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getDataLayerAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_3_0());
				}
				lv_attributes_3_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_3_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getReferencesReferenceParserRuleCall_4_0());
				}
				lv_references_4_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"references",
						lv_references_4_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='att'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeSimpleTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleSimpleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.SimpleType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getTypeEntityCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleHypertextLayer
entryRuleHypertextLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHypertextLayerRule()); }
	iv_ruleHypertextLayer=ruleHypertextLayer
	{ $current=$iv_ruleHypertextLayer.current; }
	EOF;

// Rule HypertextLayer
ruleHypertextLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='hypertext {'
		{
			newLeafNode(otherlv_0, grammarAccess.getHypertextLayerAccess().getHypertextKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHypertextLayerAccess().getPagesPageParserRuleCall_1_0());
				}
				lv_pages_1_0=rulePage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHypertextLayerRule());
					}
					add(
						$current,
						"pages",
						lv_pages_1_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Page");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='start page is'
		{
			newLeafNode(otherlv_2, grammarAccess.getHypertextLayerAccess().getStartPageIsKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getHypertextLayerRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getHypertextLayerAccess().getStartPageStaticPageCrossReference_3_0());
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getHypertextLayerAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePage
entryRulePage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	iv_rulePage=rulePage
	{ $current=$iv_rulePage.current; }
	EOF;

// Rule Page
rulePage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPageAccess().getStaticPageParserRuleCall_0());
		}
		this_StaticPage_0=ruleStaticPage
		{
			$current = $this_StaticPage_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPageAccess().getDynamicPageParserRuleCall_1());
		}
		this_DynamicPage_1=ruleDynamicPage
		{
			$current = $this_DynamicPage_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStaticPage
entryRuleStaticPage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaticPageRule()); }
	iv_ruleStaticPage=ruleStaticPage
	{ $current=$iv_ruleStaticPage.current; }
	EOF;

// Rule StaticPage
ruleStaticPage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='static page'
		{
			newLeafNode(otherlv_0, grammarAccess.getStaticPageAccess().getStaticPageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStaticPageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStaticPageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStaticPageAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaticPageAccess().getLinksLinkParserRuleCall_3_0());
				}
				lv_links_3_0=ruleLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaticPageRule());
					}
					add(
						$current,
						"links",
						lv_links_3_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Link");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStaticPageAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='link to page'
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLinkToPageKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getTargetPageCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDynamicPage
entryRuleDynamicPage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicPageRule()); }
	iv_ruleDynamicPage=ruleDynamicPage
	{ $current=$iv_ruleDynamicPage.current; }
	EOF;

// Rule DynamicPage
ruleDynamicPage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDynamicPageAccess().getIndexPageParserRuleCall_0());
		}
		this_IndexPage_0=ruleIndexPage
		{
			$current = $this_IndexPage_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDynamicPageAccess().getDataPageParserRuleCall_1());
		}
		this_DataPage_1=ruleDataPage
		{
			$current = $this_DataPage_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndexPage
entryRuleIndexPage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexPageRule()); }
	iv_ruleIndexPage=ruleIndexPage
	{ $current=$iv_ruleIndexPage.current; }
	EOF;

// Rule IndexPage
ruleIndexPage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='index page'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexPageAccess().getIndexPageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIndexPageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexPageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='shows entity'
			{
				newLeafNode(otherlv_2, grammarAccess.getIndexPageAccess().getShowsEntityKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIndexPageRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getIndexPageAccess().getEntityEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getIndexPageAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexPageAccess().getLinksLinkParserRuleCall_4_0());
				}
				lv_links_5_0=ruleLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexPageRule());
					}
					add(
						$current,
						"links",
						lv_links_5_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Link");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getIndexPageAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDataPage
entryRuleDataPage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPageRule()); }
	iv_ruleDataPage=ruleDataPage
	{ $current=$iv_ruleDataPage.current; }
	EOF;

// Rule DataPage
ruleDataPage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='data page'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPageAccess().getDataPageKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataPageAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataPageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='shows entity'
			{
				newLeafNode(otherlv_2, grammarAccess.getDataPageAccess().getShowsEntityKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDataPageRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getDataPageAccess().getEntityEntityCrossReference_2_1_0());
					}
				)
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDataPageAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPageAccess().getLinksLinkParserRuleCall_4_0());
				}
				lv_links_5_0=ruleLink
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPageRule());
					}
					add(
						$current,
						"links",
						lv_links_5_0,
						"org.eclipse.emf.refactor.examples.SimpleWebModelingLanguage.Link");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataPageAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Rule SimpleType
ruleSimpleType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Boolean'
			{
				$current = grammarAccess.getSimpleTypeAccess().getBooleanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSimpleTypeAccess().getBooleanEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Email'
			{
				$current = grammarAccess.getSimpleTypeAccess().getEmailEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSimpleTypeAccess().getEmailEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Float'
			{
				$current = grammarAccess.getSimpleTypeAccess().getFloatEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSimpleTypeAccess().getFloatEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Integer'
			{
				$current = grammarAccess.getSimpleTypeAccess().getIntegerEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSimpleTypeAccess().getIntegerEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='String'
			{
				$current = grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
