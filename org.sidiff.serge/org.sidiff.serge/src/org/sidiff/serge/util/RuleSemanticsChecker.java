package org.sidiff.serge.util;

import org.eclipse.emf.henshin.interpreter.EGraph;
import org.eclipse.emf.henshin.interpreter.impl.EGraphImpl;
import org.eclipse.emf.henshin.interpreter.util.EGraphIsomorphyChecker;
import org.eclipse.emf.henshin.model.Rule;

/**
 * Simple Checker that checks if two rules (without considering application
 * conditions) are semantically equal. Basically, we check if the LHS and RHS
 * graphs of both rules are isomorphic to each other.
 * 
 * @author kehrer
 */
// TODO: This should be sufficient for all rules generated by SERGe.
// <br/>However, a full check must incorporate also
// the rules' contexts (i.e. LHS <-> RHS mappings) and PACs/NACs
public class RuleSemanticsChecker {

	private Rule rule1;
	private Rule rule2;

	public RuleSemanticsChecker(Rule rule1, Rule rule2) {
		super();
		this.rule1 = rule1;
		this.rule2 = rule2;
	}

	public boolean isEqual() {
		EGraph lhs1 = new EGraphImpl(rule1.getLhs());
		EGraph rhs1 = new EGraphImpl(rule1.getRhs());
		EGraph lhs2 = new EGraphImpl(rule2.getLhs());
		EGraph rhs2 = new EGraphImpl(rule2.getRhs());

		EGraphIsomorphyChecker lhsChecker = new EGraphIsomorphyChecker(lhs1, null);
		EGraphIsomorphyChecker rhsChecker = new EGraphIsomorphyChecker(rhs1, null);

		return lhsChecker.isIsomorphicTo(lhs2, null) && rhsChecker.isIsomorphicTo(rhs2, null);
	}
}
